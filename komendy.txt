rejestracja:
curl -X POST -H "Content-Type: application/json" -d '{"login":"admin","password":"admin"}' http://<address>:<port>/register

logowanie:
curl -X POST -H "Content-Type: application/json" -d '{"login":"admin","password":"admin"}' http://<address>:<port>/login

testowa ściezka zwracająca login uytkownika
curl -X GET -H "Authorization: Bearer <access_token>" http://<address>:<port>/user

refresh access tokena
curl -X POST -H "Authorization: Bearer <refresh_token>" http://<address>:<port>/refresh

testowa ściezka do komunikacji między aplikacjami używającymi szyfrowania
curl -X GET -H "Authorization: Bearer <access_token>" http://<address>:<port>/between-apps-communication

wylogowanie z usunięciem tokenów
curl -X DELETE \
  -H "Authorization: Bearer <access_token>" \
  -H "Content-Type: application/json" \
  -d '{"refresh_token": "<refresh_token>"}' \
  http://<address>:<port>/logout


Przykładowe logi z przy nieudanym uwierzytelnianiu
INFO:app:Failed request: failed login from address: 10.244.0.1
INFO:app:Failed request: failed login from address: 10.244.0.1
INFO:app:Failed request: failed validation for endpoint /user from address: 10.244.0.1
INFO:app:Failed request: failed validation for endpoint /user from address: 10.244.0.1
INFO:app:Failed request: failed validation for endpoint /user from address: 10.244.0.1
INFO:app:Failed request: failed validation for endpoint /refresh from address: 10.244.0.1
INFO:app:Failed request: failed validation for endpoint /refresh from address: 10.244.0.1


minikube start --cni calico

żeby nodePort działał w minikubie to trzeba ten serwis tak odpalić:
minikube service main-app-service --url


docker run -d \
  --name mypostgres \
  -e POSTGRES_PASSWORD=example-password \
  -v ./init.sql:/docker-entrypoint-initdb.d/init.sql \
  -v ./baza:/var/lib/postgresql/data \
  -p 5432:5432 \
  postgres:15.4