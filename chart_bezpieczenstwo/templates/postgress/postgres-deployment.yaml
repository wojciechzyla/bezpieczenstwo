apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
data:
  init.sql: |
    CREATE DATABASE {{ .Values.api.env.DB_NAME }};
    CREATE USER {{ .Values.api.env.DB_USERNAME }} WITH ENCRYPTED PASSWORD '{{ .Values.api.env.DB_PASSWORD }}';
    GRANT ALL ON DATABASE {{ .Values.api.env.DB_NAME }} TO {{ .Values.api.env.DB_USERNAME }};
    ALTER DATABASE {{ .Values.api.env.DB_NAME }} OWNER TO {{ .Values.api.env.DB_USERNAME }};
    GRANT USAGE, CREATE ON SCHEMA PUBLIC TO {{ .Values.api.env.DB_USERNAME }};
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15.4-bookworm
        imagePullPolicy: {{ .Values.postgres.image.imagePullPolicy }}
        env:
        - name: POSTGRES_PASSWORD
          value: example-password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config-volume
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: postgres-storage
        hostPath:
          path: {{ .Values.postgres.PersistentVolume.path | quote }}
          type: DirectoryOrCreate
      - name: postgres-config-volume
        configMap:
          name: postgres-configmap
  volumeClaimTemplates:
  - metadata:
      name: postgres-pvc
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 0.5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-network-policy
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: rest-api
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: rest-api

