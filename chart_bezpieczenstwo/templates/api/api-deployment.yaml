apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-api
  labels:
    app: rest-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest-api
  template:
    metadata:
      labels:
        app: rest-api
    spec:
      containers:
      - name: rest-api-container
        image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
        imagePullPolicy: {{ .Values.api.image.imagePullPolicy }}
        ports:
        - containerPort: 5000
        env:
        - name: DB_NAME
          value: {{ .Values.api.env.DB_NAME | quote }}
        - name: DB_HOST
          value: {{ .Values.api.env.DB_HOST | quote }}
        - name: DB_USERNAME
          value: {{ .Values.api.env.DB_USERNAME | quote }}
        - name: DB_PASSWORD
          value: {{ .Values.api.env.DB_PASSWORD | quote }}
        - name: ACCESS_TOKEN_EXPIRES_MIN
          value: {{ .Values.api.env.ACCESS_TOKEN_EXPIRES_MIN | quote }}
        - name: REFRESH_TOKEN_EXPIRES_MIN
          value: {{ .Values.api.env.REFRESH_TOKEN_EXPIRES_MIN | quote }}
        - name: JWT_SECRET_KEY
          value: {{ .Values.api.env.JWT_SECRET_KEY | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: rest-api-service
spec:
  selector:
    app: rest-api
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30007
  type: NodePort
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: rest-api-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$1
# spec:
#   rules:
#     - host: my-domain.hello
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: rest-api-service
#                 port:
#                   number: 5000


